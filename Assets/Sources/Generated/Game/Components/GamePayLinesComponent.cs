//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity payLinesEntity { get { return GetGroup(GameMatcher.PayLines).GetSingleEntity(); } }
    public PayLinesComponent payLines { get { return payLinesEntity.payLines; } }
    public bool hasPayLines { get { return payLinesEntity != null; } }

    public GameEntity SetPayLines(System.Collections.Generic.List<PayLines> newValue) {
        if (hasPayLines) {
            throw new Entitas.EntitasException("Could not set PayLines!\n" + this + " already has an entity with PayLinesComponent!",
                "You should check if the context already has a payLinesEntity before setting it or use context.ReplacePayLines().");
        }
        var entity = CreateEntity();
        entity.AddPayLines(newValue);
        return entity;
    }

    public void ReplacePayLines(System.Collections.Generic.List<PayLines> newValue) {
        var entity = payLinesEntity;
        if (entity == null) {
            entity = SetPayLines(newValue);
        } else {
            entity.ReplacePayLines(newValue);
        }
    }

    public void RemovePayLines() {
        payLinesEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PayLinesComponent payLines { get { return (PayLinesComponent)GetComponent(GameComponentsLookup.PayLines); } }
    public bool hasPayLines { get { return HasComponent(GameComponentsLookup.PayLines); } }

    public void AddPayLines(System.Collections.Generic.List<PayLines> newValue) {
        var index = GameComponentsLookup.PayLines;
        var component = CreateComponent<PayLinesComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePayLines(System.Collections.Generic.List<PayLines> newValue) {
        var index = GameComponentsLookup.PayLines;
        var component = CreateComponent<PayLinesComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePayLines() {
        RemoveComponent(GameComponentsLookup.PayLines);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPayLines;

    public static Entitas.IMatcher<GameEntity> PayLines {
        get {
            if (_matcherPayLines == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PayLines);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPayLines = matcher;
            }

            return _matcherPayLines;
        }
    }
}
